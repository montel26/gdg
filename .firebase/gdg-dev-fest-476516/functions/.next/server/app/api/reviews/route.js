(()=>{var e={};e.id=217,e.ids=[217],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},3873:e=>{"use strict";e.exports=require("path")},4387:(e,t,s)=>{"use strict";s.r(t),s.d(t,{patchFetch:()=>v,routeModule:()=>u,serverHooks:()=>g,workAsyncStorage:()=>w,workUnitAsyncStorage:()=>l});var r={};s.r(r),s.d(r,{GET:()=>c,POST:()=>p});var a=s(6559),n=s(8088),i=s(7719),o=s(2190),d=s(7462);async function c(){try{let e=await d.Rd.getAll();return o.NextResponse.json(e)}catch(e){return console.error("Error fetching reviews:",e),o.NextResponse.json({error:"Internal server error"},{status:500})}}async function p(e){try{let t=await e.json();if(!t.speakerId&&!t.sessionId)return o.NextResponse.json({error:"Either speakerId or sessionId must be provided"},{status:400});let s=await d.Rd.create(t);return o.NextResponse.json(s,{status:201})}catch(e){return console.error("Error creating review:",e),o.NextResponse.json({error:"Internal server error"},{status:500})}}let u=new a.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/reviews/route",pathname:"/api/reviews",filename:"route",bundlePath:"app/api/reviews/route"},resolvedPagePath:"/home/sthembiso/Documents/Personal Projects/gdg/app/api/reviews/route.ts",nextConfigOutput:"",userland:r}),{workAsyncStorage:w,workUnitAsyncStorage:l,serverHooks:g}=u;function v(){return(0,i.patchFetch)({workAsyncStorage:w,workUnitAsyncStorage:l})}},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5511:e=>{"use strict";e.exports=require("crypto")},6487:()=>{},7462:(e,t,s)=>{"use strict";s.d(t,{Ad:()=>m,F_:()=>l,MI:()=>w,Rd:()=>v,dS:()=>g,s4:()=>u});var r=s(9021),a=s(3873),n=s(5663);let i=(0,a.join)(process.cwd(),"data"),o=(0,a.join)(i,"gdg.json");async function d(){try{await r.promises.mkdir(i,{recursive:!0})}catch(e){}}async function c(){if("phase-production-build"===process.env.NEXT_PHASE)return{speakers:[],sessions:[],events:[],reviews:[],admins:[]};await d();try{let e=await r.promises.readFile(o,"utf-8");return JSON.parse(e)}catch(e){return{speakers:[],sessions:[],events:[],reviews:[],admins:[]}}}async function p(e){"phase-production-build"!==process.env.NEXT_PHASE&&(await d(),await r.promises.writeFile(o,JSON.stringify(e,null,2)))}async function u(){let e=await c();if(0===e.admins.length){let t=process.env.ADMIN_USERNAME||"admin",s=process.env.ADMIN_PASSWORD||"admin123";process.env.ADMIN_USERNAME&&process.env.ADMIN_PASSWORD||console.warn("⚠️  WARNING: Using default admin credentials. Please set ADMIN_USERNAME and ADMIN_PASSWORD in .env.local");let r=await n.Ay.hash(s,10),a={id:Date.now().toString(),username:t,passwordHash:r,createdAt:new Date().toISOString()};e.admins.push(a),console.log(`Created admin user: ${t}`),console.log("✅ Admin user created. Speakers, sessions, and reviews can be added via the admin panel.")}else console.log("✅ Admin user already exists.");await p(e),console.log("Database initialization complete!")}let w={getAll:async()=>(await c()).speakers.sort((e,t)=>new Date(t.createdAt).getTime()-new Date(e.createdAt).getTime()),getById:async e=>(await c()).speakers.find(t=>t.id===e),create:async e=>{let t=await c(),s=new Date().toISOString(),r={...e,id:Date.now().toString()+Math.random().toString(36).substr(2,9),rating:0,reviewCount:0,createdAt:s,updatedAt:s};return t.speakers.push(r),await p(t),r},update:async(e,t)=>{let s=await c(),r=s.speakers.findIndex(t=>t.id===e);-1!==r&&(s.speakers[r]={...s.speakers[r],...t,updatedAt:new Date().toISOString()},await p(s))},delete:async e=>{let t=await c();t.speakers=t.speakers.filter(t=>t.id!==e),t.sessions=t.sessions.map(t=>({...t,speakerIds:t.speakerIds.filter(t=>t!==e)})),await p(t)}},l={getAll:async()=>(await c()).sessions.sort((e,t)=>e.startTime.localeCompare(t.startTime)),getById:async e=>(await c()).sessions.find(t=>t.id===e),create:async e=>{let t=await c(),s=new Date().toISOString(),r={...e,id:Date.now().toString()+Math.random().toString(36).substr(2,9),createdAt:s,updatedAt:s};return t.sessions.push(r),await p(t),r},update:async(e,t)=>{let s=await c(),r=s.sessions.findIndex(t=>t.id===e);-1!==r&&(s.sessions[r]={...s.sessions[r],...t,updatedAt:new Date().toISOString()},await p(s))},delete:async e=>{let t=await c();t.sessions=t.sessions.filter(t=>t.id!==e),await p(t)}},g={get:async()=>(await c()).events[0],create:async e=>{let t=await c(),s=new Date().toISOString(),r={...e,id:Date.now().toString(),createdAt:s,updatedAt:s};return t.events=[r],await p(t),r},update:async(e,t)=>{let s=await c(),r=s.events.findIndex(t=>t.id===e);-1!==r&&(s.events[r]={...s.events[r],...t,updatedAt:new Date().toISOString()},await p(s))}},v={getAll:async()=>(await c()).reviews.sort((e,t)=>new Date(t.createdAt).getTime()-new Date(e.createdAt).getTime()),getBySpeakerId:async e=>(await c()).reviews.filter(t=>t.speakerId===e).sort((e,t)=>new Date(t.createdAt).getTime()-new Date(e.createdAt).getTime()),getBySessionId:async e=>(await c()).reviews.filter(t=>t.sessionId===e).sort((e,t)=>new Date(t.createdAt).getTime()-new Date(e.createdAt).getTime()),create:async e=>{let t=await c(),s=new Date().toISOString(),r={...e,id:Date.now().toString()+Math.random().toString(36).substr(2,9),createdAt:s};if(t.reviews.push(r),e.speakerId){let s=t.reviews.filter(t=>t.speakerId===e.speakerId),r=s.reduce((e,t)=>e+t.rating,0)/s.length,a=t.speakers.findIndex(t=>t.id===e.speakerId);-1!==a&&(t.speakers[a].rating=Math.round(10*r)/10,t.speakers[a].reviewCount=s.length)}return await p(t),r},delete:async e=>{let t=await c(),s=t.reviews.find(t=>t.id===e);if(t.reviews=t.reviews.filter(t=>t.id!==e),s&&s.speakerId){let e=t.reviews.filter(e=>e.speakerId===s.speakerId),r=e.length>0?e.reduce((e,t)=>e+t.rating,0)/e.length:0,a=t.speakers.findIndex(e=>e.id===s.speakerId);-1!==a&&(t.speakers[a].rating=Math.round(10*r)/10,t.speakers[a].reviewCount=e.length)}await p(t)}},m={getByUsername:async e=>(await c()).admins.find(t=>t.username===e),create:async e=>{let t=await c(),s={...e,id:Date.now().toString(),createdAt:new Date().toISOString()};return t.admins.push(s),await p(t),s}}},8335:()=>{},9021:e=>{"use strict";e.exports=require("fs")},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[447,12],()=>s(4387));module.exports=r})();